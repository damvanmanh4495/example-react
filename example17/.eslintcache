[{"D:\\example\\manhdv\\example17\\src\\index.tsx":"1","D:\\example\\manhdv\\example17\\src\\reportWebVitals.ts":"2","D:\\example\\manhdv\\example17\\src\\App.tsx":"3","D:\\example\\manhdv\\example17\\src\\utils\\PublicRoute.tsx":"4","D:\\example\\manhdv\\example17\\src\\utils\\AuthContext.tsx":"5","D:\\example\\manhdv\\example17\\src\\utils\\Common.tsx":"6","D:\\example\\manhdv\\example17\\src\\utils\\PrivateRoute.tsx":"7","D:\\example\\manhdv\\example17\\src\\Components\\Home\\Home.tsx":"8","D:\\example\\manhdv\\example17\\src\\Components\\Login\\Login.tsx":"9","D:\\example\\manhdv\\example17\\src\\Components\\Category\\CategoryList\\CategoryList.tsx":"10","D:\\example\\manhdv\\example17\\src\\Components\\Category\\CategoryDetail\\CategoryDetail.tsx":"11","D:\\example\\manhdv\\example17\\src\\Components\\Category\\Categoryitem\\CategoryItem.tsx":"12","D:\\example\\manhdv\\example17\\src\\Components\\Selection\\Selection.tsx":"13","D:\\example\\manhdv\\example17\\src\\Components\\Pagination\\Pagination.tsx":"14","D:\\example\\manhdv\\example17\\src\\Components\\Category\\CategoryEdit\\CategoryEdit.tsx":"15","D:\\example\\manhdv\\example17\\src\\Components\\Header\\Header.tsx":"16"},{"size":542,"mtime":1611550095355,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1044,"mtime":1611549950786,"results":"20","hashOfConfig":"18"},{"size":519,"mtime":1611543585101,"results":"21","hashOfConfig":"18"},{"size":2015,"mtime":1611564655516,"results":"22","hashOfConfig":"18"},{"size":158,"mtime":1611565375078,"results":"23","hashOfConfig":"18"},{"size":500,"mtime":1611557660586,"results":"24","hashOfConfig":"18"},{"size":219,"mtime":1611549718795,"results":"25","hashOfConfig":"18"},{"size":3372,"mtime":1611624719166,"results":"26","hashOfConfig":"18"},{"size":5322,"mtime":1611562363887,"results":"27","hashOfConfig":"18"},{"size":2276,"mtime":1611558658893,"results":"28","hashOfConfig":"18"},{"size":579,"mtime":1611544035989,"results":"29","hashOfConfig":"18"},{"size":744,"mtime":1611546093106,"results":"30","hashOfConfig":"18"},{"size":2501,"mtime":1611562283754,"results":"31","hashOfConfig":"18"},{"size":5186,"mtime":1611563742036,"results":"32","hashOfConfig":"18"},{"size":1187,"mtime":1611624401153,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ldqugm",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\example\\manhdv\\example17\\src\\index.tsx",[],["71","72"],"D:\\example\\manhdv\\example17\\src\\reportWebVitals.ts",[],"D:\\example\\manhdv\\example17\\src\\App.tsx",[],"D:\\example\\manhdv\\example17\\src\\utils\\PublicRoute.tsx",[],"D:\\example\\manhdv\\example17\\src\\utils\\AuthContext.tsx",["73"],"import React, { createContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { axios_config } from './Common'\r\n\r\ninterface Props {\r\n    children: React.ReactNode\r\n}\r\n\r\ninterface IAuth {\r\n    token: string | null,\r\n        data: string | null\r\n}\r\n\r\n\r\nexport const authContext = createContext({});\r\n\r\nfunction AuthProvider(props: Props) {\r\n\r\n\r\n    const [auth, setAuth] = useState<IAuth>({\r\n        token: JSON.parse(window.localStorage.getItem('token') || '{}'),\r\n        data: JSON.parse(window.localStorage.getItem('data') || '{}'),\r\n    });\r\n\r\n    const verifyToken = async () => {\r\n        let status;\r\n        await axios.post('/api/test/verify', {}, axios_config(auth.token))\r\n            .then(res => {\r\n                console.log(res)\r\n                status = res.status;\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response)\r\n                status = err.response.data.status;\r\n            });\r\n        return status;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAuth({\r\n            token: JSON.parse(window.localStorage.getItem('token') || '{}'),\r\n            data: JSON.parse(window.localStorage.getItem('data') || '{}'),\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function checkToken() {\r\n            if (await verifyToken() !== 200) {\r\n                setAuth({\r\n                    data: null,\r\n                    token: null,\r\n                });\r\n            }\r\n        }\r\n        window.localStorage.setItem('token', JSON.stringify(auth.token));\r\n        window.localStorage.setItem('data', JSON.stringify(auth.data));\r\n        checkToken();\r\n    }, [auth.token, auth.data]);\r\n\r\n    const setAuthData = (data: string, token: string) => {\r\n        setAuth({\r\n            data: data,\r\n            token: token,\r\n        });\r\n    };\r\n    return (\r\n        <authContext.Provider value={{ auth, setAuthData }}>\r\n            {props.children}\r\n        </authContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthProvider;\r\n\r\n","D:\\example\\manhdv\\example17\\src\\utils\\Common.tsx",[],"D:\\example\\manhdv\\example17\\src\\utils\\PrivateRoute.tsx",[],"D:\\example\\manhdv\\example17\\src\\Components\\Home\\Home.tsx",[],"D:\\example\\manhdv\\example17\\src\\Components\\Login\\Login.tsx",[],"D:\\example\\manhdv\\example17\\src\\Components\\Category\\CategoryList\\CategoryList.tsx",["74","75"],"import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { authContext } from '../../../utils/AuthContext';\r\nimport { axios_config } from '../../../utils/Common';\r\nimport { ICategory } from '../../../utils/Type';\r\nimport Pagination from '../../Pagination/Pagination';\r\nimport Selection from '../../Selection/Selection';\r\nimport CategoryDetail from '../CategoryDetail/CategoryDetail';\r\nimport CategoryItem from '../Categoryitem/CategoryItem';\r\n\r\nimport './cate.css'\r\n\r\n\r\nfunction CategoryList() {\r\n    const [categories, setCategories] = useState<ICategory[]>([]);\r\n    const [categoryDetail, setCategoryDetail] = useState<ICategory>({ id: 1 });\r\n    const [detailStatus, setDetailStatus] = useState(false);\r\n\r\n    const { auth }: any = useContext(authContext);\r\n\r\n    const [pagination, setPagination] = useState({\r\n        page: 1,\r\n        size: 3,\r\n        totalItem: 0,\r\n    });\r\n\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    function handleShowCate(category: ICategory) {\r\n        setCategoryDetail(category);\r\n        setDetailStatus(true);\r\n    }\r\n\r\n    function handlePage(e: any) {\r\n        setPagination({\r\n            ...pagination,\r\n            page: Number(e.target.innerHTML),\r\n        })\r\n    }\r\n\r\n    function handleSelect() {\r\n        let select = (document.getElementById('sl-limit') as HTMLInputElement);\r\n        let e = select.value;\r\n        setPagination({\r\n            ...pagination,\r\n            size: Number(e),\r\n            page: 1,\r\n        });\r\n    }\r\n\r\n    function handlePrevious() {\r\n        if (pagination.page >= 1) {\r\n            setPagination({\r\n                ...pagination,\r\n                page: pagination.page - 1\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleNext() {\r\n        const totalRow = Math.ceil(pagination.totalItem/pagination.size)\r\n        if (pagination.page < totalRow) {\r\n            setPagination({\r\n                ...pagination,\r\n                page: pagination.page + 1\r\n            })\r\n        }\r\n    }\r\n\r\n    const getAPICategory = async () => {\r\n        await axios\r\n            .get(\"/admin/categories?page=\" + pagination.page + \"&size=\" + pagination.size + \"\")\r\n            .then(response => {\r\n                setCategories(response.data.categories);\r\n                setPagination({\r\n                    ...pagination,\r\n                    totalItem: response.data.total_page,\r\n                });\r\n            })\r\n            .catch(err => console.log(err.response.statusText));\r\n    }\r\n\r\n    async function handleDelete(id: number) {\r\n        await axios\r\n            .delete('/admin/categories/' + id, axios_config(auth.token))\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    alert('Delete success !');\r\n                    setSuccess(true);\r\n                    setDetailStatus(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                alert('Delete fail !');\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAPICategory();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getAPICategory();\r\n    }, [pagination.page, pagination.size, success]);\r\n\r\n    let categoryItem = categories.map((category) => {\r\n        return <CategoryItem\r\n            key={category.id}\r\n            name={category.name}\r\n            onClickShow={() => handleShowCate(category)}\r\n        />\r\n    });\r\n\r\n    let boxDetail;\r\n    if (detailStatus) {\r\n        var detail = categoryDetail;\r\n        boxDetail = (<CategoryDetail\r\n            categoryDetail={categoryDetail}\r\n            onClickDelete={() => handleDelete(detail.id)}\r\n        />);\r\n    } else {\r\n        boxDetail = <div></div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3\">\r\n                        <div>\r\n                            <div>\r\n                                <Link to='/category-list/edit' className=\"btn btn-primary\">Thêm mới</Link>\r\n                            </div>\r\n                            <div>\r\n                                <div>\r\n                                    <Selection\r\n                                        onChangeSelect={handleSelect}\r\n                                    />\r\n                                    <div>\r\n                                        <ul className=\"list-category\">\r\n                                            {categoryItem}\r\n                                        </ul>\r\n                                    </div>\r\n                                    <Pagination\r\n                                        pagination={pagination}\r\n                                        onClickPage={handlePage}\r\n                                        onClickPrevious={handlePrevious}\r\n                                        onClickNext={handleNext}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-9\">\r\n                        {boxDetail}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CategoryList;","D:\\example\\manhdv\\example17\\src\\Components\\Category\\CategoryDetail\\CategoryDetail.tsx",[],["76","77"],"D:\\example\\manhdv\\example17\\src\\Components\\Category\\Categoryitem\\CategoryItem.tsx",[],"D:\\example\\manhdv\\example17\\src\\Components\\Selection\\Selection.tsx",[],"D:\\example\\manhdv\\example17\\src\\Components\\Pagination\\Pagination.tsx",[],"D:\\example\\manhdv\\example17\\src\\Components\\Category\\CategoryEdit\\CategoryEdit.tsx",["78"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { authContext } from '../../../utils/AuthContext';\r\nimport axios from 'axios';\r\nimport { axios_config } from '../../../utils/Common';\r\n\r\ninterface Props {\r\n    match: any,\r\n    history: any\r\n}\r\n\r\nfunction CategoryEdit(props: Props) {\r\n\r\n    const [category, setCategory] = useState({\r\n        name: '',\r\n        code: '',\r\n        descriptions: '',\r\n    })\r\n    const [dataStatus, setDataStatus] = useState(0);\r\n    const [success, setSuccess] = useState(false);\r\n    const [alert1, setAlert1] = useState('');\r\n\r\n    const { auth }: any = useContext(authContext);\r\n\r\n    function handleChange(e: any) {\r\n        var target = e.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        setCategory({\r\n            ...category,\r\n            [name]: value,\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getAPICategory();\r\n    }, []);\r\n\r\n    async function getAPICategory() {\r\n        var id = props.match.params.id;\r\n        if (id !== undefined) {\r\n            await axios\r\n                .get(\"/admin/categories/\" + id)\r\n                .then(response => {\r\n                    setCategory(response.data);\r\n                })\r\n                .catch(err => console.log(err));\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    const handleSubmitUpdate = async (event: any) => {\r\n        const data = category;\r\n        const id = props.match.params.id;\r\n        event.preventDefault();\r\n        await axios\r\n            .put('/admin/categories/' + id, data, axios_config(auth.token))\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    setDataStatus(res.status);\r\n                    setAlert1('Sửa thành công !');\r\n                    alert('Sửa thành công !');\r\n                    props.history.goBack();\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setDataStatus(error.response.status);\r\n                setAlert1(\"Sửa thất bại ! \" + error.response.statusText + \"\");\r\n            });\r\n        setSuccess(true);\r\n    }\r\n    const handleSubmitCreate = async (event: any) => {\r\n        const data = category;\r\n        event.preventDefault();\r\n        await axios\r\n            .post('/admin/categories', data, axios_config(auth.token))\r\n            .then(res => {\r\n                if (res.status === 201) {\r\n                    setDataStatus(res.status);\r\n                    setAlert1('Thêm thành công !');\r\n                    alert('Thêm thành công !');\r\n                    props.history.goBack();\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setDataStatus(error.response.status);\r\n                setAlert1(\"Thêm thất bại ! \" + error.response.statusText + \"\");\r\n            });\r\n        setSuccess(true);\r\n    }\r\n\r\n    const handleBack = () => {\r\n        props.history.goBack();\r\n    }\r\n\r\n    let alterCo;\r\n    if (success) {\r\n        alterCo = <div className={dataStatus === 200 ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\r\n            {alert1}\r\n        </div>\r\n    };\r\n    return (\r\n        <div className=\"card card-primary\" style={{ width: '700px', margin: '20px auto', }}>\r\n            <div className=\"card-header d-flex justify-content-between\">\r\n                <h3 className=\"card-title\">{props.match.params.id !== undefined ? 'Sửa loại danh mục' : 'Thêm loại danh mục'}</h3>\r\n            </div>\r\n            <div>{alterCo}</div>\r\n            <form method='post' onSubmit={props.match.params.id !== undefined ? handleSubmitUpdate : handleSubmitCreate}>\r\n                <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputCode\">Mã danh mục</label>\r\n                        <input type=\"text\" className=\"form-control\" value={category.code} name=\"code\" onChange={handleChange} id=\"exampleInputCode\" placeholder=\"Mã danh mục\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputName\">Tên danh mục</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"name\" value={category.name} onChange={handleChange} id=\"exampleInputName\" placeholder=\"Tên danh mục\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputDescription\">Mô tả</label>\r\n                        <input type=\"text\" className=\"form-control\" value={category.descriptions} name=\"descriptions\" onChange={handleChange} id=\"exampleInputDescription\" placeholder=\"Mô tả\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">{props.match.params.id !== undefined ? 'Cập nhật' : 'Thêm mới'}</button>\r\n                    <button type=\"button\" onClick={handleBack} className=\"btn btn-danger ml-2\">Quay lại</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CategoryEdit;","D:\\example\\manhdv\\example17\\src\\Components\\Header\\Header.tsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":58,"column":8,"nodeType":"85","endLine":58,"endColumn":31,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":101,"column":8,"nodeType":"85","endLine":101,"endColumn":10,"suggestions":"88"},{"ruleId":"83","severity":1,"message":"87","line":105,"column":8,"nodeType":"85","endLine":105,"endColumn":51,"suggestions":"89"},{"ruleId":"79","replacedBy":"90"},{"ruleId":"81","replacedBy":"91"},{"ruleId":"83","severity":1,"message":"87","line":35,"column":8,"nodeType":"85","endLine":35,"endColumn":10,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyToken'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has a missing dependency: 'getAPICategory'. Either include it or remove the dependency array.",["96"],["97"],["93"],["94"],["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"101","fix":"105"},"Update the dependencies array to be: [auth.token, auth.data, verifyToken]",{"range":"106","text":"107"},"Update the dependencies array to be: [getAPICategory]",{"range":"108","text":"109"},"Update the dependencies array to be: [getAPICategory, pagination.page, pagination.size, success]",{"range":"110","text":"111"},{"range":"112","text":"109"},[1650,1673],"[auth.token, auth.data, verifyToken]",[3103,3105],"[getAPICategory]",[3168,3211],"[getAPICategory, pagination.page, pagination.size, success]",[929,931]]